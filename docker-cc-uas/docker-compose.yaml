version: '3.6'
services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=user
  web:
    build: ./frontend
    volumes:
      - ./frontend:/var/www/html
    environment:
      - BACKEND_HOST=localhost
      - BACKEND_PORT=5000
      - BACKEND_HOST_URL=localhost
      - BACKEND_PORT_URL=5001
    depends_on:
      - api-url
      - api-downloader
    restart: always
    ports:
      - 80:80 #port harus sama 
  mongodb:
    image: mongodb/mongodb-community-server:6.0-ubi8
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - type: bind
        source: ./data
        target: /data/mongodb
  api-downloader:
    build: ./backend-downloader
    ports:
      - 5000:5000
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_USER=user
      - MONGODB_PASSWORD=pass
      - MONGODB_PORT=27017
      - API_URL_HOST=localhost
      - API_URL_PORT=5001
    restart: always
    volumes:
      - ./backend-downloader/logs:/logs
    depends_on:
      - mongodb
      - api-url
  api-downloader1:
    build: ./backend-downloader
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_USER=user
      - MONGODB_PASSWORD=pass
      - MONGODB_PORT=27017
      - API_URL_HOST=localhost
      - API_URL_PORT=5001
    restart: always
    volumes:
      - ./backend-downloader/logs:/logs
    depends_on:
      - mongodb
      - api-url
  api-downloader2:
    build: ./backend-downloader
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_USER=user
      - MONGODB_PASSWORD=pass
      - MONGODB_PORT=27017
      - API_URL_HOST=localhost
      - API_URL_PORT=5001
    restart: always
    volumes:
      - ./backend-downloader/logs:/logs
    depends_on:
      - mongodb
      - api-url
  api-downloader3:
    build: ./backend-downloader
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_USER=user
      - MONGODB_PASSWORD=pass
      - MONGODB_PORT=27017
      - API_URL_HOST=localhost
      - API_URL_PORT=5001
    restart: always
    volumes:
      - ./backend-downloader/logs:/logs
    depends_on:
      - mongodb
      - api-url
  db:
    image: mysql:8.3.0
    environment:
      - MYSQL_ROOT_PASSWORD=example
      - MYSQL_DATABASE=example
    volumes:
      - ./data/sql:/var/lib/mysql
    ports:
      - 3306:3306
    restart: always
  consumer-url:
    build: ./consumer-url
    restart: always
    depends_on:
      - rabbitmq
      - Logstash
    volumes:
      - ./consumer-url/logs:/logs
    environment:
      - LOG_LEVEL=DEBUG
  api-url:
    build: ./backend-get-url
    ports:
      - 5001:5001
    restart: always
    depends_on:
      - mongodb
  urlfrontier:
    build: ./url-frontier
    volumes:
      - ./url-frontier/logs:/logs
    ports:
      - 5002:5002
    restart: always
    depends_on:
      - Logstash
    environment:
      - LOG_LEVEL=DEBUG
  Elasticsearch:
    image: elasticsearch:7.16.2
    container_name: elasticsearch
    restart: always
    volumes:
    - elastic_data:/usr/share/elasticsearch/data/
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node    
    ports:
    - '9200:9200'
    - '9300:9300'
    networks:
      - elk

  Logstash:
    image: logstash:7.16.2
    container_name: logstash
    restart: always
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./url-frontier/logs:/frontier-logs
      - ./consumer-url/logs:/consumer-logs
      - ./backend-downloader/logs:/downloader-logs
    depends_on:
      - Elasticsearch
    ports:
    - '9600:9600'
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"    
    networks:
      - elk

  Kibana:
    image: kibana:7.16.2
    container_name: kibana
    restart: always       
    ports:
    - '5601:5601'
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200  
    depends_on:
      - Elasticsearch  
    networks:
      - elk
  proxy:
    image: nginx
    ports:
      - 3001:3001
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - ./proxy/logs:/usr/app
    restart: always
volumes:
  elastic_data: {}

networks:
  elk: